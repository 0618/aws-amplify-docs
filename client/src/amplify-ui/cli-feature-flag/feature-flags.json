{
  "graphQLTransformer": {
    "description": "Feature Flag related to GraphQL Transformer",
    "features": {
      "addMissingOwnerFields": {
        "description": "Automatically add owner field to type when owner fields are not in the type",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.30.0",
        "values": [
          {
            "value": "true",
            "description": "Inserts the owner field from auth rules when its missing in type",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Doesn't insert the owner field automatically",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "validateTypeNameReservedWords": {
        "description": "Throw an error when compiling the GraphQL schema if a type name is a reserved word.",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.32.1",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "Throws an error if a type name is a reserved word.",
            "defaultNewProject": true,
            "defaultExistingProject": true
          },
          {
            "value": "false",
            "description": "Allows compilation to pass with reserved words as type names. However, you may encounter downstream GraphQL errors.",
            "defaultNewProject": false,
            "defaultExistingProject": false
          }
        ]
      },
      "useExperimentalPipelinedTransformer": {
        "description": "Use pipeline resolver-based GraphQL Transformer (GraphQL Transformer vNext).",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.32.4",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "Enable pipeline resolver-based GraphQL Transformer (GraphQL Transformer vNext).",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Disables pipeline resolver-based GraphQL Transformer.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "enableIterativeGsiUpdates": {
        "description": "Enable multiple GSI updates through iterative incremental deployments.",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.38.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "GraphQL schemas changes can contain multiple GSI changes.",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Throws Error when mutating more than 1 GSIs in update flow. .",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      }
    }
  },
  "frontend-ios": {
    "description": "Feature Flag related to iOS projects",
    "features": {
      "enableXcodeIntegration": {
        "description": "Automatically add DataStore / API models to the Xcode project.",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "All newly generated DataStore/API models are auto-added to the Xcode project",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "All newly generated DataStore/API models are NOT auto-added to the Xcode project.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      }
    }
  },
  "auth": {
    "description": "Feature Flag related to auth",
    "features": {
      "enableCaseInsensitivity": {
        "description": "Toggles case insensitivity for Cognito login mechanisms (username, email etc..)",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "Emails and usernames are case insensitive",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Emails and usernames are case sensitive.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      }
    }
  },
  "codegen": {
    "description": "Feature Flag related to Codegen",
    "features": {
      "useAppsyncModelgenPlugin": {
        "description": "Use the migrated implementation of internal DataStore model generator package at https://github.com/aws-amplify/amplify-codegen",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "[Recommended] Use the migrated modelgen internal package which will be actively maintained",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Use the modelgen package implementation at https://github.com/aws-amplify/amplify-cli/tree/master/packages/amplify-codegen-appsync-model-plugin. This package is set for deprecation. Please refer to the changelog https://github.com/aws-amplify/amplify-cli/blob/master/packages/amplify-codegen-appsync-model-plugin/CHANGELOG.md to see the enhacements in migrated implementation.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "useDocsGeneratorPlugin": {
        "description": "Use the migrated implementation of internal GraphQL documents generator package at https://github.com/aws-amplify/amplify-codegen",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "[Recommended] Use the migrated document generator internal package which will be actively maintained",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Use the document generation package implementation at https://github.com/aws-amplify/amplify-cli/tree/master/packages/amplify-graphql-docs-generator. This package is set for deprecation. Please refer to the changelog https://github.com/aws-amplify/amplify-codegen/blob/master/packages/graphql-docs-generator/CHANGELOG.md to see the enhacements in migrated implementation.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "useTypesGeneratorPlugin": {
        "description": "Use the migrated implementation of internal GraphQL types generator package at https://github.com/aws-amplify/amplify-codegen",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "[Recommended] Use the migrated types generator internal package which will be actively maintained",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Use the types generation package implementation at https://github.com/aws-amplify/amplify-cli/tree/master/packages/amplify-graphql-types-generator. This package is set for deprecation. Please refer to the changelog https://github.com/aws-amplify/amplify-codegen/blob/master/packages/graphql-types-generator/CHANGELOG.md to see the enhacements in migrated implementation.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "cleanGeneratedModelsDirectory": {
        "description": "Clears the generated models folder before they are re-generated.",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "Recommended to be set true when there are no hand-written files in the modelgen output folder.",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Does not remove pre-existing files from the modelgen output folder. This would retain the generated models even after the corresponding types are removed from the GraphQL schema.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      },
      "retainCaseStyle": {
        "description": "Retains the case style developer uses while naming the GraphQL types in schema",
        "type": "Feature",
        "valueType": "Boolean",
        "versionAdded": "4.40.0",
        "deprecationDate": "May 1st 2021",
        "values": [
          {
            "value": "true",
            "description": "Set true to retain the different case styles used for type names in the schema. Refer https://github.com/aws-amplify/amplify-codegen/pull/89",
            "defaultNewProject": true,
            "defaultExistingProject": false
          },
          {
            "value": "false",
            "description": "Continue using the current approach to generate camleCase/PascalCase variable names for types irrespective of the case style used for naming the types. This will allow some time to make changes to the application to use the modified variables.",
            "defaultNewProject": false,
            "defaultExistingProject": true
          }
        ]
      }
    }
  }
}
